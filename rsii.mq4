/*
   Generated by EX4-TO-MQ4 decompiler V4.0.225.1g []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/

#property indicator_separate_window
#property indicator_levelcolor DarkSlateGray
#property indicator_levelstyle 0
#property indicator_buffers 3
#property indicator_color1 DimGray
#property indicator_color2 Red
#property indicator_color3 Gold
#property indicator_level1 75.0
#property indicator_level2 50.0
#property indicator_level3 25.0

extern int Osc = 29;
extern bool TH = TRUE;
extern bool TL = TRUE;
extern bool trend = FALSE;
extern bool convergen = TRUE;
extern int Complect = 1;
int gi_100 = 10;
int gi_104 = 20;
int gi_108 = 30;
int gi_112 = 40;
int gi_116 = 50;
int gi_120 = 60;
int gi_124 = 70;
int gi_128 = 80;
extern int BackSteph = 0;
extern int BackStepl = 0;
extern int BackStep = 0;
extern int qSteps = 1;
extern int LevDPl = 5;
extern int LevDPr = 1;
extern int period = 8;
extern int ma_method = 0;
extern int ma_shift = 0;
extern int applied_price = 4;
extern int mode = 0;
extern int fast_ema_period = 12;
extern int slow_ema_period = 26;
extern int signal_period = 9;
extern int Kperiod = 13;
extern int Dperiod = 5;
extern int slowing = 3;
extern int price_field = 0;
extern int T3_Period = 1;
extern double b = 0.7;
extern int showBars = 1000;
extern bool LeftStrong = FALSE;
extern bool RightStrong = TRUE;
extern bool Anti = TRUE;
extern bool Trend_Down = TRUE;
extern bool Trend_Up = TRUE;
extern bool TrendLine = TRUE;
extern bool HandyColour = TRUE;
extern color Highline = Red;
extern color Lowline = DeepSkyBlue;
extern bool ChannelLine = FALSE;
extern int Trend = 0;
extern bool Channel = FALSE;
extern bool Regression = TRUE;
extern bool RayH = TRUE;
extern bool RayL = TRUE;
extern color ChannelH = Red;
extern color ChannelL = DeepSkyBlue;
extern double STD_widthH = 1.0;
extern double STD_widthL = 1.0;
extern int Back = 0;
bool gi_308 = FALSE;
extern int code = 159;
double gd_316;
double gd_324;
double gd_332;
double gd_340;
double gd_348;
double gd_356;
double gd_364;
double gd_372;
double gd_380;
double gd_388;
double gd_396;
double gd_404;
double gd_412;
double gd_420;
double gd_428;
datetime g_time_436;
double gd_440;
double gd_448;
double gd_456;
double gd_464;
double gd_472;
double gd_480;
double g_ibuf_488[];
double g_ibuf_492[];
double g_ibuf_496[];
double g_ibuf_500[];
string gsa_504[] = {
   "Êðàñíàÿ",
   "Ñèíÿÿ",
   "Ðîçîâàÿ",
   "Ãîëóáàÿ",
   "Êîðè÷íåâàÿ",
   "Ñàëàòíàÿ"
};
int gia_508[] = {
   255,
   16760576,
   5275647,
   16776960,
   1262987,
   7451452
};
int gi_512 = 0;
int g_bars_516;
double g_time_520 = 0.0;

int init() {
   string ls_0;
   if (BackStep > 0) {
      BackSteph = BackStep;
      BackStepl = BackStep;
   }
   IndicatorBuffers(4);
   g_bars_516 = Bars;
   qSteps = MathMin(3, qSteps);
   while (NormalizeDouble(Point, gi_512) == 0.0) gi_512++;
   string ls_8 = "DLines";
   SetIndexStyle(0, DRAW_LINE);
   SetIndexBuffer(0, g_ibuf_492);
   SetIndexDrawBegin(0, T3_Period * 2);
   SetIndexStyle(1, DRAW_ARROW);
   SetIndexStyle(2, DRAW_ARROW);
   SetIndexArrow(1, code);
   SetIndexArrow(2, code);
   SetIndexBuffer(1, g_ibuf_496);
   SetIndexBuffer(2, g_ibuf_500);
   SetIndexEmptyValue(1, 0.0);
   SetIndexEmptyValue(2, 0.0);
   SetIndexLabel(1, ls_8);
   SetIndexLabel(2, ls_8);
   SetIndexBuffer(3, g_ibuf_488);
   switch (Osc) {
   case 1:
      ls_0 = "AC";
      break;
   case 2:
      ls_0 = "A/D";
      break;
   case 3:
      ls_0 = "ADX";
      break;
   case 4:
      ls_0 = "ATR";
      break;
   case 5:
      ls_0 = "AO";
      break;
   case 6:
      ls_0 = "Bears";
      break;
   case 7:
      ls_0 = "Bulls";
      break;
   case 8:
      ls_0 = "CCI";
      break;
   case 9:
      ls_0 = "DeM";
      break;
   case 10:
      ls_0 = "Force";
      break;
   case 11:
      ls_0 = "Momentum";
      break;
   case 12:
      ls_0 = "MFI";
      break;
   case 13:
      ls_0 = "MACD";
      break;
   case 14:
      ls_0 = "OsMA";
      break;
   case 15:
      ls_0 = "OBV";
      break;
   case 16:
      ls_0 = "RVI";
      break;
   case 17:
      ls_0 = "StdDev";
      break;
   case 18:
      ls_0 = "Stoch";
      break;
   case 19:
      ls_0 = "Volume";
      break;
   case 20:
      ls_0 = "Close";
      break;
   case 21:
      ls_0 = "Open";
      break;
   case 22:
      ls_0 = "High";
      break;
   case 23:
      ls_0 = "Low";
      break;
   case 24:
      ls_0 = "Median Price";
      break;
   case 25:
      ls_0 = "Typical Price";
      break;
   case 26:
      ls_0 = "Weighted Close Price";
      break;
   case 27:
      ls_0 = "(O+C+H+L)/4";
      break;
   case 28:
      ls_0 = "(O+C)/2";
      break;
   case 29:
      ls_0 = "RSI";
      break;
   case 30:
      ls_0 = "RBCI";
      break;
   case 31:
      ls_0 = "FTLM";
      break;
   case 32:
      ls_0 = "STLM";
      break;
   case 33:
      ls_0 = "JRSX Diver";
      break;
   case 34:
      ls_0 = "RSI";
      break;
   case 35:
      ls_0 = "WPR";
      break;
   default:
      ls_0 = "RBCI";
   }
   IndicatorShortName(ls_0);
   SetIndexLabel(0, ls_0);
   gd_420 = b * b;
   gd_428 = gd_420 * b;
   gd_372 = -gd_428;
   gd_380 = 3.0 * (gd_420 + gd_428);
   gd_388 = -3.0 * (2.0 * gd_420 + b + gd_428);
   gd_396 = 3.0 * b + 1.0 + gd_428 + 3.0 * gd_420;
   if (T3_Period < 1) T3_Period = 1;
   gd_364 = (T3_Period - 1) / 2.0 + 1.0;
   gd_404 = 2 / (gd_364 + 1.0);
   gd_412 = 1 - gd_404;
   return (0);
}

int deinit() {
   if (gi_308) Comment("");
   for (int li_0 = 1; li_0 <= qSteps; li_0++) {
      ObjectDelete("HL(" + Complect + ")_" + li_0);
      ObjectDelete("LL(" + Complect + ")_" + li_0);
      ObjectDelete("HCL(" + Complect + ")_" + li_0);
      ObjectDelete("LCL(" + Complect + ")_" + li_0);
      ObjectDelete("CHAh(" + Complect + ")_" + li_0);
      ObjectDelete("CHAl(" + Complect + ")_" + li_0);
   }
   return (0);
}

int start() {
   int li_0;
   int li_16;
   int li_44;
   int li_48;
   int li_52;
   int li_56;
   int li_60;
   int li_64;
   string ls_68;
   int l_ind_counted_8 = IndicatorCounted();
   if (l_ind_counted_8 < 0) return (-1);
   if (l_ind_counted_8 < 1) li_16 = Bars - 1;
   else li_16 = Bars - l_ind_counted_8;
   for (int li_12 = 0; li_12 <= li_16; li_12++) {
      switch (Osc) {
      case 1:
         g_ibuf_488[li_12] = iAC(NULL, 0, li_12) + 1.0;
         break;
      case 2:
         g_ibuf_488[li_12] = iAD(NULL, 0, li_12);
         break;
      case 3:
         g_ibuf_488[li_12] = iADX(NULL, 0, period, applied_price, mode, li_12);
         break;
      case 4:
         g_ibuf_488[li_12] = iATR(NULL, 0, period, li_12);
         break;
      case 5:
         g_ibuf_488[li_12] = iAO(NULL, 0, li_12) + 1.0;
         break;
      case 6:
         g_ibuf_488[li_12] = iBearsPower(NULL, 0, period, applied_price, li_12) + 1.0;
         break;
      case 7:
         g_ibuf_488[li_12] = iBullsPower(NULL, 0, period, applied_price, li_12) + 1.0;
         break;
      case 8:
         g_ibuf_488[li_12] = iCCI(NULL, 0, period, applied_price, li_12) + 1000.0;
         break;
      case 9:
         g_ibuf_488[li_12] = iDeMarker(NULL, 0, period, li_12);
         break;
      case 10:
         g_ibuf_488[li_12] = iForce(NULL, 0, period, ma_method, applied_price, li_12) + 100.0;
         break;
      case 11:
         g_ibuf_488[li_12] = iMomentum(NULL, 0, period, applied_price, li_12);
         break;
      case 12:
         g_ibuf_488[li_12] = iMFI(NULL, 0, period, li_12);
         break;
      case 13:
         g_ibuf_488[li_12] = iMACD(NULL, 0, fast_ema_period, slow_ema_period, signal_period, applied_price, mode, li_12) + 1.0;
         break;
      case 14:
         g_ibuf_488[li_12] = iOsMA(NULL, 0, fast_ema_period, slow_ema_period, signal_period, applied_price, li_12) + 1.0;
         break;
      case 15:
         g_ibuf_488[li_12] = iOBV(NULL, 0, applied_price, li_12) / 10000000.0 + 100.0;
         break;
      case 16:
         g_ibuf_488[li_12] = iRVI(NULL, 0, period, mode, li_12) + 1.0;
         break;
      case 17:
         g_ibuf_488[li_12] = iStdDev(NULL, 0, period, ma_shift, ma_method, applied_price, li_12);
         break;
      case 18:
         g_ibuf_488[li_12] = iStochastic(NULL, 0, Kperiod, Dperiod, slowing, ma_method, price_field, mode, li_12);
         break;
      case 19:
         g_ibuf_488[li_12] = Volume[li_12];
         break;
      case 20:
         g_ibuf_488[li_12] = Close[li_12];
         break;
      case 21:
         g_ibuf_488[li_12] = Open[li_12];
         break;
      case 22:
         g_ibuf_488[li_12] = High[li_12];
         break;
      case 23:
         g_ibuf_488[li_12] = Low[li_12];
         break;
      case 24:
         g_ibuf_488[li_12] = (High[li_12] + Low[li_12]) / 2.0;
         break;
      case 25:
         g_ibuf_488[li_12] = (High[li_12] + Low[li_12] + Close[li_12]) / 3.0;
         break;
      case 26:
         g_ibuf_488[li_12] = (High[li_12] + Low[li_12] + Close[li_12] + Close[li_12]) / 4.0;
         break;
      case 27:
         g_ibuf_488[li_12] = (Open[li_12] + Close[li_12] + High[li_12] + Low[li_12]) / 4.0;
         break;
      case 28:
         g_ibuf_488[li_12] = (Open[li_12] + Close[li_12]) / 2.0;
         break;
      case 29:
         g_ibuf_488[li_12] = iRSI(NULL, 0, period, applied_price, li_12);
         break;
      case 30:
         g_ibuf_488[li_12] = iCustom(NULL, 0, "RBCI Petr2", 0, li_12);
         break;
      case 31:
         g_ibuf_488[li_12] = iCustom(NULL, 0, "FTLM Petr2", 0, li_12);
         break;
      case 32:
         g_ibuf_488[li_12] = iCustom(NULL, 0, "STLM Petr2", 0, li_12);
         break;
      case 33:
         g_ibuf_488[li_12] = iCustom(NULL, 0, "JRSX Diver", 0, li_12);
         break;
      case 34:
         g_ibuf_488[li_12] = iRSI(NULL, 0, period, applied_price, li_12);
         break;
      case 35:
         g_ibuf_488[li_12] = iWPR(NULL, 0, period, li_12);
         break;
      default:
         g_ibuf_488[li_12] = iCustom(NULL, 0, "RBCI Petr2", 0, li_12);
      }
   }
   if (Bars - 1 < T3_Period) return (0);
   int li_28 = IndicatorCounted();
   if (li_28 > 0) li_28--;
   int li_24 = Bars - 1 - T3_Period;
   li_16 = Bars - 1 - li_28;
   if (li_16 > li_24) {
      for (int li_32 = Bars - 1; li_32 >= li_24; li_32--) g_ibuf_492[li_32] = 0.0;
      li_16 = li_24;
   }
   datetime l_time_36 = Time[li_16 + 1];
   if (li_16 < li_24) {
      if (l_time_36 == g_time_436) {
         gd_316 = gd_440;
         gd_324 = gd_448;
         gd_332 = gd_456;
         gd_340 = gd_464;
         gd_348 = gd_472;
         gd_356 = gd_480;
      } else {
         if (l_time_36 > g_time_436) Print("ERROR01");
         else Print("ERROR02");
         return (-1);
      }
   }
   for (li_32 = li_16; li_32 >= 0; li_32--) {
      if (li_32 == 1) {
         if ((li_16 == 1 && g_time_436 != Time[2]) || li_16 > 1) {
            g_time_436 = Time[2];
            gd_440 = gd_316;
            gd_448 = gd_324;
            gd_456 = gd_332;
            gd_464 = gd_340;
            gd_472 = gd_348;
            gd_480 = gd_356;
         }
      }
      gd_316 = gd_404 * g_ibuf_488[li_32] + gd_412 * gd_316;
      gd_324 = gd_404 * gd_316 + gd_412 * gd_324;
      gd_332 = gd_404 * gd_324 + gd_412 * gd_332;
      gd_340 = gd_404 * gd_332 + gd_412 * gd_340;
      gd_348 = gd_404 * gd_340 + gd_412 * gd_348;
      gd_356 = gd_404 * gd_348 + gd_412 * gd_356;
      g_ibuf_492[li_32] = gd_372 * gd_356 + gd_380 * gd_348 + gd_388 * gd_340 + gd_396 * gd_332;
   }
   if (g_bars_516 != Bars) {
      deinit();
      Sleep(1000);
      g_bars_516 = Bars;
      g_time_520 = 0;
      return (0);
   }
   if (g_time_520 == Time[0]) return (0);
   g_time_520 = Time[0];
   if (showBars > Bars - LevDPl - 1) showBars = Bars - LevDPl - 1;
   if (showBars == 0) showBars = Bars - LevDPl - 1;
   for (int li_40 = showBars + Back; li_40 > LevDPr + Back; li_40--) {
      li_44 = 1;
      li_48 = 1;
      li_52 = 1;
      if (LevDPl != 0) {
         li_0 = LevDPl;
         for (int li_4 = LevDPr; li_0 > 0; li_4--) {
            if (LeftStrong) {
               if (g_ibuf_492[li_40 + li_0] >= g_ibuf_492[li_40]) li_44 = 0;
            } else
            if (g_ibuf_492[li_40 + li_0] > g_ibuf_492[li_40]) li_44 = 0;
            if (li_4 > 0) {
               if (RightStrong) {
                  if (g_ibuf_492[li_40 - li_4] >= g_ibuf_492[li_40]) li_48 = 0;
               } else
               if (g_ibuf_492[li_40 - li_4] > g_ibuf_492[li_40]) li_48 = 0;
            }
            li_52 = li_44 * li_48 * li_52;
            li_0--;
         }
         if (li_52 > 0) g_ibuf_496[li_40] = g_ibuf_492[li_40];
         else g_ibuf_496[li_40] = 0;
      } else {
         for (li_4 = LevDPr; li_4 > 0; li_4--) {
            if (RightStrong) {
               if (g_ibuf_492[li_40 - li_4] >= g_ibuf_492[li_40]) li_48 = 0;
            } else
            if (g_ibuf_492[li_40 - li_4] > g_ibuf_492[li_40]) li_48 = 0;
            li_52 = li_48 * li_52;
         }
         if (li_52 > 0) g_ibuf_496[li_40] = g_ibuf_492[li_40];
         else g_ibuf_496[li_40] = 0;
      }
      li_56 = 1;
      li_60 = 1;
      li_64 = 1;
      if (LevDPl != 0) {
         li_0 = LevDPl;
         for (li_4 = LevDPr; li_0 > 0; li_4--) {
            if (LeftStrong) {
               if (g_ibuf_492[li_40 + li_0] <= g_ibuf_492[li_40]) li_56 = 0;
            } else
            if (g_ibuf_492[li_40 + li_0] < g_ibuf_492[li_40]) li_56 = 0;
            if (li_4 > 0) {
               if (RightStrong) {
                  if (g_ibuf_492[li_40 - li_4] <= g_ibuf_492[li_40]) li_60 = 0;
               } else
               if (g_ibuf_492[li_40 - li_4] < g_ibuf_492[li_40]) li_60 = 0;
            }
            li_64 = li_56 * li_60 * li_64;
            li_0--;
         }
         if (li_64 > 0) g_ibuf_500[li_40] = g_ibuf_492[li_40];
         else g_ibuf_500[li_40] = 0;
      } else {
         for (li_4 = LevDPr; li_4 > 0; li_4--) {
            if (RightStrong) {
               if (g_ibuf_492[li_40 - li_4] <= g_ibuf_492[li_40]) li_60 = 0;
            } else
            if (g_ibuf_492[li_40 - li_4] < g_ibuf_492[li_40]) li_60 = 0;
            li_64 = li_60 * li_64;
         }
         if (li_64 > 0) g_ibuf_500[li_40] = g_ibuf_492[li_40];
         else g_ibuf_500[li_40] = 0;
      }
   }
   for (li_40 = 1; li_40 <= qSteps; li_40++) ls_68 = ls_68 + TDMain(li_40);
   if (gi_308) Comment(ls_68);
   return (0);
}

string TDMain(int ai_0) {
   int li_4;
   int li_8;
   int li_12;
   int li_16;
   int li_20;
   int li_24;
   int li_28;
   int li_32;
   int li_36;
   int li_40;
   int li_44;
   int li_48;
   int li_52;
   int li_56;
   int li_64;
   int li_68;
   int li_72;
   int li_76;
   int li_80;
   int li_84;
   int li_88;
   int li_92;
   int li_96;
   int li_100;
   int li_104;
   int li_108;
   int li_112;
   int li_116;
   int li_124;
   color l_color_132;
   double ld_136;
   string ls_unused_160;
   string l_name_168;
   string l_name_176;
   string l_name_184;
   string l_name_192;
   string l_name_200;
   string l_name_208;
   string l_name_216;
   string l_name_224;
   string l_name_232;
   string ls_unused_240;
   string ls_248;
   int li_260;
   int li_264;
   int li_272;
   double ld_276;
   double ld_284;
   double ld_292;
   double ld_300;
   double ld_308;
   double ld_316;
   double ld_324;
   double ld_332;
   double ld_unused_340;
   double ld_unused_348;
   int l_window_372;
   string ls_ret_152 = "»—»—» Øàã " + ai_0 + " èç " + qSteps + " (BackStep " + BackStep + ")\n";
   switch (Osc) {
   case 1:
      ls_248 = "AC";
      break;
   case 2:
      ls_248 = "A/D";
      break;
   case 3:
      ls_248 = "ADX";
      break;
   case 4:
      ls_248 = "ATR";
      break;
   case 5:
      ls_248 = "AO";
      break;
   case 6:
      ls_248 = "Bears";
      break;
   case 7:
      ls_248 = "Bulls";
      break;
   case 8:
      ls_248 = "CCI";
      break;
   case 9:
      ls_248 = "DeM";
      break;
   case 10:
      ls_248 = "Force";
      break;
   case 11:
      ls_248 = "Momentum";
      break;
   case 12:
      ls_248 = "MFI";
      break;
   case 13:
      ls_248 = "MACD";
      break;
   case 14:
      ls_248 = "OsMA";
      break;
   case 15:
      ls_248 = "OBV";
      break;
   case 16:
      ls_248 = "RVI";
      break;
   case 17:
      ls_248 = "StdDev";
      break;
   case 18:
      ls_248 = "Stoch";
      break;
   case 19:
      ls_248 = "Volume";
      break;
   case 20:
      ls_248 = "Close";
      break;
   case 21:
      ls_248 = "Open";
      break;
   case 22:
      ls_248 = "High";
      break;
   case 23:
      ls_248 = "Low";
      break;
   case 24:
      ls_248 = "Median Price";
      break;
   case 25:
      ls_248 = "Typical Price";
      break;
   case 26:
      ls_248 = "Weighted Close Price";
      break;
   case 27:
      ls_248 = "(O+C+H+L)/4";
      break;
   case 29:
      ls_248 = "RSI";
      break;
   case 30:
      ls_248 = "RBCI";
      break;
   case 31:
      ls_248 = "FTLM";
      break;
   case 32:
      ls_248 = "STLM";
      break;
   case 33:
      ls_248 = "JRSX Diver";
      break;
   case 34:
      ls_248 = "RSI";
      break;
   case 35:
      ls_248 = "WPR";
      break;
   default:
      ls_248 = "RBCI";
   }
   if (Trend <= 0) {
      ls_ret_152 = ls_ret_152 + "» " + ((gsa_504[ai_0 * 2 - 2])) + " DownTrendLine ";
      if (HandyColour) l_color_132 = Highline;
      else l_color_132 = gia_508[2 * ai_0 - 2];
      li_4 = GetTD(ai_0 + BackSteph, g_ibuf_496);
      li_8 = GetNextHighTD(li_4);
      li_12 = GetNextHighTD(li_8);
      li_16 = GetNextHighTD(li_12);
      li_20 = GetNextHighTD(li_16);
      li_24 = GetNextHighTD(li_20);
      li_28 = GetNextHighTD(li_24);
      li_32 = GetNextHighTD(li_28);
      li_36 = GetNextHighTD(li_32);
      li_40 = GetNextHighTD(li_36);
      li_44 = GetNextHighTD(li_40);
      li_48 = GetNextHighTD(li_44);
      li_52 = GetNextHighTD(li_48);
      li_56 = GetNextHighTD(li_52);
      ld_136 = (g_ibuf_492[li_8] - g_ibuf_492[li_4]) / (li_8 - li_4);
      li_260 = 1;
      for (int li_268 = li_4 + 1; li_260 < li_8 - li_4 - 1; li_260++) {
         li_264 = li_4 + 1 + li_260;
         if (g_ibuf_492[li_268] < g_ibuf_492[li_264]) li_272 = li_268;
         else li_272 = li_264;
         li_268 = li_272;
      }
      if (Complect > 0) {
         ld_276 = Complect + gi_100;
         ld_284 = Complect + gi_104;
         ld_292 = Complect + gi_108;
         ld_300 = Complect + gi_112;
         ld_308 = Complect + gi_116;
         ld_316 = Complect + gi_120;
         ld_324 = Complect + gi_124;
         ld_332 = Complect + gi_128;
      }
      li_124 = li_268;
      ls_ret_152 = ls_ret_152 +
         "\n";
      l_window_372 = WindowFind(ls_248);
      l_name_168 = "HL(" + Complect + ")_" + ai_0;
      l_name_176 = "HL(" + ld_332 + ")_" + ai_0;
      l_name_184 = "HL(" + ld_276 + ")_" + ai_0;
      l_name_192 = "HL(" + ld_284 + ")_" + ai_0;
      l_name_200 = "HL(" + ld_292 + ")_" + ai_0;
      l_name_208 = "HL(" + ld_300 + ")_" + ai_0;
      l_name_216 = "HL(" + ld_308 + ")_" + ai_0;
      l_name_224 = "HL(" + ld_316 + ")_" + ai_0;
      l_name_232 = "HL(" + ld_324 + ")_" + ai_0;
      if (trend == TRUE && g_ibuf_488[li_8] > g_ibuf_488[li_4]) {
         ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_8]);
         ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_8]);
         ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
         ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
      } else {
         if (trend == TRUE && g_ibuf_488[li_12] > g_ibuf_488[li_4]) {
            ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_12]);
            ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_12]);
            ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
            ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
         } else {
            if (trend == TRUE && g_ibuf_488[li_16] > g_ibuf_488[li_4]) {
               ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
               ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_16]);
               ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
               ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_16]);
               ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
               ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
               ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
            } else {
               if (trend == TRUE && g_ibuf_488[li_20] > g_ibuf_488[li_4]) {
                  ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                  ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_20]);
                  ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                  ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_20]);
                  ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                  ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                  ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
               } else {
                  if (trend == TRUE && g_ibuf_488[li_24] > g_ibuf_488[li_4]) {
                     ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                     ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_24]);
                     ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                     ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_24]);
                     ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                     ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                     ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                  } else {
                     if (trend == TRUE && g_ibuf_488[li_28] > g_ibuf_488[li_4]) {
                        ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                        ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_28]);
                        ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                        ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_28]);
                        ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                        ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                        ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                     } else {
                        if (trend == TRUE && g_ibuf_488[li_32] > g_ibuf_488[li_4]) {
                           ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                           ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_32]);
                           ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                           ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_32]);
                           ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                           ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                           ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                        } else {
                           if (trend == TRUE && g_ibuf_488[li_36] > g_ibuf_488[li_4]) {
                              ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                              ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_36]);
                              ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                              ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_36]);
                              ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                              ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                              ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                           } else {
                              if (trend == TRUE && g_ibuf_488[li_40] > g_ibuf_488[li_4]) {
                                 ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                 ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_40]);
                                 ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                                 ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_40]);
                                 ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                                 ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                 ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                              } else {
                                 if (trend == TRUE && g_ibuf_488[li_44] > g_ibuf_488[li_4]) {
                                    ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                    ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_44]);
                                    ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                                    ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_44]);
                                    ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                                    ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                    ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                 } else {
                                    if (trend == TRUE && g_ibuf_488[li_48] > g_ibuf_488[li_4]) {
                                       ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                       ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_48]);
                                       ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                                       ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_48]);
                                       ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                                       ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                       ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                    } else {
                                       if (trend == TRUE && g_ibuf_488[li_52] > g_ibuf_488[li_4]) {
                                          ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                          ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_52]);
                                          ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                                          ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_52]);
                                          ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                                          ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                          ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                       } else {
                                          if (trend == TRUE && g_ibuf_488[li_56] > g_ibuf_488[li_4]) {
                                             ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                             ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_56]);
                                             ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                                             ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_56]);
                                             ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                                             ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                             ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                          } else {
                                             if (trend == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && g_ibuf_488[li_16] < g_ibuf_488[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] &&
                                                g_ibuf_488[li_24] < g_ibuf_488[li_4] && g_ibuf_488[li_28] < g_ibuf_488[li_4] && g_ibuf_488[li_32] < g_ibuf_488[li_4] && g_ibuf_488[li_36] < g_ibuf_488[li_4] && g_ibuf_488[li_40] < g_ibuf_488[li_4] &&
                                                g_ibuf_488[li_44] < g_ibuf_488[li_4] && g_ibuf_488[li_48] < g_ibuf_488[li_4] && g_ibuf_488[li_52] < g_ibuf_488[li_4] && g_ibuf_488[li_56] < g_ibuf_488[li_4]) {
                                                ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                                ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_4]);
                                                ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_4]);
                                                ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_4]);
                                                ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_4]);
                                                ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                                ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                             } else ObjectDelete(l_name_168);
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
      if (TrendLine && g_ibuf_488[li_8] > g_ibuf_488[li_4] && High[li_8] < High[li_4]) {
         ObjectCreate(l_name_176, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_176, OBJPROP_TIME1, Time[li_8]);
         ObjectSet(l_name_176, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_176, OBJPROP_PRICE1, g_ibuf_492[li_8]);
         ObjectSet(l_name_176, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_176, OBJPROP_COLOR, Red);
         ObjectSet(l_name_176, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_176, OBJPROP_RAY, FALSE);
         ld_unused_348 = 1;
      } else {
         if (convergen == TRUE && TrendLine && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] > High[li_4]) {
            ObjectCreate(l_name_176, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_176, OBJPROP_TIME1, Time[li_8]);
            ObjectSet(l_name_176, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_176, OBJPROP_PRICE1, g_ibuf_492[li_8]);
            ObjectSet(l_name_176, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_176, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_176, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_176, OBJPROP_RAY, FALSE);
            ld_unused_348 = 1;
         } else ObjectDelete(l_name_176);
      }
      if (TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] > g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
         High[li_12] > High[li_8]) {
         ObjectCreate(l_name_184, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_184, OBJPROP_TIME1, Time[li_12]);
         ObjectSet(l_name_184, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_184, OBJPROP_PRICE1, g_ibuf_492[li_12]);
         ObjectSet(l_name_184, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_184, OBJPROP_COLOR, Red);
         ObjectSet(l_name_184, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_184, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] > High[li_4] &&
            High[li_12] > High[li_8] && g_ibuf_488[li_12] > g_ibuf_488[li_8]) {
            ObjectCreate(l_name_184, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_184, OBJPROP_TIME1, Time[li_12]);
            ObjectSet(l_name_184, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_184, OBJPROP_PRICE1, g_ibuf_492[li_12]);
            ObjectSet(l_name_184, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_184, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_184, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_184, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_184);
      }
      if (TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
         g_ibuf_488[li_16] > g_ibuf_488[li_4] && High[li_16] < High[li_4] && High[li_16] > High[li_12] && High[li_16] > High[li_8]) {
         ObjectCreate(l_name_192, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_192, OBJPROP_TIME1, Time[li_16]);
         ObjectSet(l_name_192, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_192, OBJPROP_PRICE1, g_ibuf_492[li_16]);
         ObjectSet(l_name_192, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_192, OBJPROP_COLOR, Red);
         ObjectSet(l_name_192, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_192, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
            g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] > High[li_4] && High[li_16] > High[li_12] && High[li_16] > High[li_8] && g_ibuf_488[li_16] > g_ibuf_488[li_8] &&
            g_ibuf_488[li_16] > g_ibuf_488[li_12]) {
            ObjectCreate(l_name_192, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_192, OBJPROP_TIME1, Time[li_16]);
            ObjectSet(l_name_192, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_192, OBJPROP_PRICE1, g_ibuf_492[li_16]);
            ObjectSet(l_name_192, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_192, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_192, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_192, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_192);
      }
      if (TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
         g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] > g_ibuf_488[li_4] && High[li_20] < High[li_4] && High[li_20] > High[li_16] &&
         High[li_20] > High[li_12] && High[li_20] > High[li_8]) {
         ObjectCreate(l_name_200, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_200, OBJPROP_TIME1, Time[li_20]);
         ObjectSet(l_name_200, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_200, OBJPROP_PRICE1, g_ibuf_492[li_20]);
         ObjectSet(l_name_200, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_200, OBJPROP_COLOR, Red);
         ObjectSet(l_name_200, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_200, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
            g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] > High[li_4] && High[li_20] > High[li_16] &&
            High[li_20] > High[li_12] && High[li_20] > High[li_8] && g_ibuf_488[li_20] > g_ibuf_488[li_8] && g_ibuf_488[li_20] > g_ibuf_488[li_12] && g_ibuf_488[li_20] > g_ibuf_488[li_16]) {
            ObjectCreate(l_name_200, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_200, OBJPROP_TIME1, Time[li_20]);
            ObjectSet(l_name_200, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_200, OBJPROP_PRICE1, g_ibuf_492[li_20]);
            ObjectSet(l_name_200, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_200, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_200, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_200, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_200);
      }
      if (TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
         g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] < High[li_4] && g_ibuf_488[li_24] > g_ibuf_488[li_4] &&
         High[li_24] < High[li_4] && High[li_24] > High[li_20] && High[li_24] > High[li_16] && High[li_24] > High[li_12] && High[li_24] > High[li_8]) {
         ObjectCreate(l_name_208, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_208, OBJPROP_TIME1, Time[li_24]);
         ObjectSet(l_name_208, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_208, OBJPROP_PRICE1, g_ibuf_492[li_24]);
         ObjectSet(l_name_208, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_208, OBJPROP_COLOR, Red);
         ObjectSet(l_name_208, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_208, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
            g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] < High[li_4] && g_ibuf_488[li_24] < g_ibuf_488[li_4] &&
            High[li_24] > High[li_4] && High[li_24] > High[li_20] && High[li_24] > High[li_16] && High[li_24] > High[li_12] && High[li_24] > High[li_8] && g_ibuf_488[li_24] > g_ibuf_488[li_8] &&
            g_ibuf_488[li_24] > g_ibuf_488[li_12] && g_ibuf_488[li_24] > g_ibuf_488[li_16] && g_ibuf_488[li_24] > g_ibuf_488[li_20]) {
            ObjectCreate(l_name_208, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_208, OBJPROP_TIME1, Time[li_24]);
            ObjectSet(l_name_208, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_208, OBJPROP_PRICE1, g_ibuf_492[li_24]);
            ObjectSet(l_name_208, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_208, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_208, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_208, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_208);
      }
      if (TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
         g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] < High[li_4] && g_ibuf_488[li_24] < g_ibuf_488[li_4] &&
         High[li_24] < High[li_4] && g_ibuf_488[li_28] > g_ibuf_488[li_4] && High[li_28] < High[li_4] && High[li_28] > High[li_24] && High[li_28] > High[li_20] && High[li_28] > High[li_16] &&
         High[li_28] > High[li_12] && High[li_28] > High[li_8]) {
         ObjectCreate(l_name_216, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_216, OBJPROP_TIME1, Time[li_28]);
         ObjectSet(l_name_216, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_216, OBJPROP_PRICE1, g_ibuf_492[li_28]);
         ObjectSet(l_name_216, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_216, OBJPROP_COLOR, Red);
         ObjectSet(l_name_216, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_216, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
            g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] < High[li_4] && g_ibuf_488[li_24] < g_ibuf_488[li_4] &&
            High[li_24] < High[li_4] && g_ibuf_488[li_28] < g_ibuf_488[li_4] && High[li_28] > High[li_4] && High[li_28] > High[li_24] && High[li_28] > High[li_20] && High[li_28] > High[li_16] &&
            High[li_28] > High[li_12] && High[li_28] > High[li_8] && g_ibuf_488[li_28] > g_ibuf_488[li_8] && g_ibuf_488[li_28] > g_ibuf_488[li_12] && g_ibuf_488[li_28] > g_ibuf_488[li_16] &&
            g_ibuf_488[li_28] > g_ibuf_488[li_20] && g_ibuf_488[li_28] > g_ibuf_488[li_24]) {
            ObjectCreate(l_name_216, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_216, OBJPROP_TIME1, Time[li_28]);
            ObjectSet(l_name_216, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_216, OBJPROP_PRICE1, g_ibuf_492[li_28]);
            ObjectSet(l_name_216, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_216, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_216, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_216, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_216);
      }
      if (TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
         g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] < High[li_4] && g_ibuf_488[li_24] < g_ibuf_488[li_4] &&
         High[li_24] < High[li_4] && g_ibuf_488[li_28] < g_ibuf_488[li_4] && High[li_28] < High[li_4] && g_ibuf_488[li_32] > g_ibuf_488[li_4] && High[li_32] < High[li_4] &&
         High[li_32] > High[li_28] && High[li_32] > High[li_24] && High[li_32] > High[li_20] && High[li_32] > High[li_16] && High[li_32] > High[li_12] && High[li_32] > High[li_8]) {
         ObjectCreate(l_name_224, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_224, OBJPROP_TIME1, Time[li_32]);
         ObjectSet(l_name_224, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_224, OBJPROP_PRICE1, g_ibuf_492[li_32]);
         ObjectSet(l_name_224, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_224, OBJPROP_COLOR, Red);
         ObjectSet(l_name_224, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_224, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
            g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] < High[li_4] && g_ibuf_488[li_24] < g_ibuf_488[li_4] &&
            High[li_24] < High[li_4] && g_ibuf_488[li_28] < g_ibuf_488[li_4] && High[li_28] < High[li_4] && g_ibuf_488[li_32] < g_ibuf_488[li_4] && High[li_32] > High[li_4] &&
            High[li_32] > High[li_28] && High[li_32] > High[li_24] && High[li_32] > High[li_20] && High[li_32] > High[li_16] && High[li_32] > High[li_12] && High[li_32] > High[li_8] &&
            g_ibuf_488[li_32] > g_ibuf_488[li_8] && g_ibuf_488[li_32] > g_ibuf_488[li_12] && g_ibuf_488[li_32] > g_ibuf_488[li_16] && g_ibuf_488[li_32] > g_ibuf_488[li_20] && g_ibuf_488[li_32] > g_ibuf_488[li_24] &&
            g_ibuf_488[li_32] > g_ibuf_488[li_28]) {
            ObjectCreate(l_name_224, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_224, OBJPROP_TIME1, Time[li_32]);
            ObjectSet(l_name_224, OBJPROP_TIME2, Time[li_4]);
            ObjectSet(l_name_224, OBJPROP_PRICE1, g_ibuf_492[li_32]);
            ObjectSet(l_name_224, OBJPROP_PRICE2, g_ibuf_492[li_4]);
            ObjectSet(l_name_224, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_224, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_224, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_224);
      }
      if (TrendLine && TH == TRUE && g_ibuf_488[li_8] < g_ibuf_488[li_4] && High[li_8] < High[li_4] && g_ibuf_488[li_12] < g_ibuf_488[li_4] && High[li_12] < High[li_4] &&
         g_ibuf_488[li_16] < g_ibuf_488[li_4] && High[li_16] < High[li_4] && g_ibuf_488[li_20] < g_ibuf_488[li_4] && High[li_20] < High[li_4] && g_ibuf_488[li_24] < g_ibuf_488[li_4] &&
         High[li_24] < High[li_4] && g_ibuf_488[li_28] < g_ibuf_488[li_4] && High[li_28] < High[li_4] && g_ibuf_488[li_32] < g_ibuf_488[li_4] && High[li_32] < High[li_4] &&
         g_ibuf_488[li_36] > g_ibuf_488[li_4] && High[li_36] < High[li_4] && High[li_36] > High[li_32] && High[li_36] > High[li_28] && High[li_36] > High[li_24] && High[li_36] > High[li_20] &&
         High[li_36] > High[li_16] && High[li_36] > High[li_12] && High[li_36] > High[li_8]) {
         ObjectCreate(l_name_232, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_232, OBJPROP_TIME1, Time[li_36]);
         ObjectSet(l_name_232, OBJPROP_TIME2, Time[li_4]);
         ObjectSet(l_name_232, OBJPROP_PRICE1, g_ibuf_492[li_36]);
         ObjectSet(l_name_232, OBJPROP_PRICE2, g_ibuf_492[li_4]);
         ObjectSet(l_name_232, OBJPROP_COLOR, Red);
         ObjectSet(l_name_232, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_232, OBJPROP_RAY, FALSE);
      } else ObjectDelete(l_name_232);
      if (Trend_Down == FALSE) ObjectDelete(l_name_168);
      l_name_168 = "HCL(" + Complect + ")_" + ai_0;
      if (ChannelLine) {
         ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_124]);
         ObjectSet(l_name_168, OBJPROP_TIME2, Time[0]);
         ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_124]);
         ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_124] - ld_136 * li_124);
         ObjectSet(l_name_168, OBJPROP_COLOR, l_color_132);
      } else ObjectDelete(l_name_168);
      if (HandyColour) l_color_132 = ChannelH;
      else l_color_132 = gia_508[2 * ai_0 - 2];
      l_name_168 = "CHAh(" + Complect + ")_" + ai_0;
      if (Channel) {
         if (Regression) {
            ObjectCreate(l_name_168, OBJ_REGRESSION, l_window_372, Time[li_8], g_ibuf_492[li_8], Time[li_4], g_ibuf_492[li_4]);
            ObjectSet(l_name_168, OBJPROP_COLOR, l_color_132);
            ObjectSet(l_name_168, OBJPROP_RAY, RayH);
         } else {
            ObjectCreate(l_name_168, OBJ_STDDEVCHANNEL, l_window_372, Time[li_8], g_ibuf_492[li_8], Time[li_4], g_ibuf_492[li_4]);
            ObjectSet(l_name_168, OBJPROP_DEVIATION, STD_widthH);
            ObjectSet(l_name_168, OBJPROP_COLOR, l_color_132);
            ObjectSet(l_name_168, OBJPROP_RAY, RayH);
         }
      } else ObjectDelete(l_name_168);
   }
   if (Trend >= 0) {
      ls_ret_152 = ls_ret_152 + "» " + ((gsa_504[ai_0 * 2 - 1])) + " UpTrendLine ";
      if (HandyColour) l_color_132 = Lowline;
      else l_color_132 = gia_508[2 * ai_0 - 1];
      li_64 = GetTD(ai_0 + BackStepl, g_ibuf_500);
      li_68 = GetNextLowTD(li_64);
      li_72 = GetNextLowTD(li_68);
      li_76 = GetNextLowTD(li_72);
      li_80 = GetNextLowTD(li_76);
      li_84 = GetNextLowTD(li_80);
      li_88 = GetNextLowTD(li_84);
      li_92 = GetNextLowTD(li_88);
      li_96 = GetNextLowTD(li_92);
      li_100 = GetNextLowTD(li_96);
      li_104 = GetNextLowTD(li_100);
      li_108 = GetNextLowTD(li_104);
      li_112 = GetNextLowTD(li_108);
      li_116 = GetNextLowTD(li_112);
      ld_136 = (g_ibuf_492[li_64] - g_ibuf_492[li_68]) / (li_68 - li_64);
      li_260 = 1;
      for (li_268 = li_64 + 1; li_260 < li_68 - li_64 - 1; li_260++) {
         li_264 = li_64 + 1 + li_260;
         if (g_ibuf_492[li_268] > g_ibuf_492[li_264]) li_272 = li_268;
         else li_272 = li_264;
         li_268 = li_272;
      }
      li_124 = li_268;
      ls_ret_152 = ls_ret_152 +
         "\n";
      l_window_372 = WindowFind(ls_248);
      l_name_168 = "LL(" + Complect + ")_" + ai_0;
      l_name_176 = "LL(" + ld_332 + ")_" + ai_0;
      l_name_184 = "LL(" + ld_276 + ")_" + ai_0;
      l_name_192 = "LL(" + ld_284 + ")_" + ai_0;
      l_name_200 = "LL(" + ld_292 + ")_" + ai_0;
      l_name_208 = "LL(" + ld_300 + ")_" + ai_0;
      l_name_216 = "LL(" + ld_308 + ")_" + ai_0;
      l_name_224 = "LL(" + ld_316 + ")_" + ai_0;
      l_name_232 = "LL(" + ld_324 + ")_" + ai_0;
      if (trend == TRUE && g_ibuf_488[li_68] < g_ibuf_488[li_64]) {
         ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_68]);
         ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_68]);
         ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
         ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
      } else {
         if (trend == TRUE && g_ibuf_488[li_72] < g_ibuf_488[li_64]) {
            ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_72]);
            ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_72]);
            ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
            ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
         } else {
            if (trend == TRUE && g_ibuf_488[li_76] < g_ibuf_488[li_64]) {
               ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
               ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_76]);
               ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
               ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_76]);
               ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
               ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
               ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
            } else {
               if (trend == TRUE && g_ibuf_488[li_80] < g_ibuf_488[li_64]) {
                  ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                  ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_80]);
                  ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                  ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_80]);
                  ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                  ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                  ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
               } else {
                  if (trend == TRUE && g_ibuf_488[li_84] < g_ibuf_488[li_64]) {
                     ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                     ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_84]);
                     ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                     ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_84]);
                     ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                     ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                     ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                  } else {
                     if (trend == TRUE && g_ibuf_488[li_88] < g_ibuf_488[li_64]) {
                        ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                        ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_88]);
                        ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                        ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_88]);
                        ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                        ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                        ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                     } else {
                        if (trend == TRUE && g_ibuf_488[li_92] < g_ibuf_488[li_64]) {
                           ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                           ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_92]);
                           ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                           ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_92]);
                           ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                           ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                           ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                        } else {
                           if (trend == TRUE && g_ibuf_488[li_96] < g_ibuf_488[li_64]) {
                              ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                              ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_96]);
                              ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                              ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_96]);
                              ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                              ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                              ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                           } else {
                              if (trend == TRUE && g_ibuf_488[li_100] < g_ibuf_488[li_64]) {
                                 ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                 ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_100]);
                                 ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                                 ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_100]);
                                 ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                                 ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                 ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                              } else {
                                 if (trend == TRUE && g_ibuf_488[li_104] < g_ibuf_488[li_64]) {
                                    ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                    ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_104]);
                                    ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                                    ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_104]);
                                    ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                                    ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                    ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                 } else {
                                    if (trend == TRUE && g_ibuf_488[li_108] < g_ibuf_488[li_64]) {
                                       ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                       ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_108]);
                                       ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                                       ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_108]);
                                       ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                                       ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                       ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                    } else {
                                       if (trend == TRUE && g_ibuf_488[li_112] < g_ibuf_488[li_64]) {
                                          ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                          ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_112]);
                                          ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                                          ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_112]);
                                          ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                                          ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                          ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                       } else {
                                          if (trend == TRUE && g_ibuf_488[li_116] < g_ibuf_488[li_64]) {
                                             ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                             ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_116]);
                                             ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                                             ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_116]);
                                             ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                                             ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                             ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                          } else {
                                             if (trend == TRUE && g_ibuf_488[li_68] < g_ibuf_488[li_64] && g_ibuf_488[li_72] < g_ibuf_488[li_64] && g_ibuf_488[li_76] < g_ibuf_488[li_64] && g_ibuf_488[li_80] < g_ibuf_488[li_64] &&
                                                g_ibuf_488[li_84] < g_ibuf_488[li_64] && g_ibuf_488[li_88] < g_ibuf_488[li_64] && g_ibuf_488[li_92] < g_ibuf_488[li_64] && g_ibuf_488[li_96] < g_ibuf_488[li_64] &&
                                                g_ibuf_488[li_100] < g_ibuf_488[li_64] && g_ibuf_488[li_104] < g_ibuf_488[li_64] && g_ibuf_488[li_108] < g_ibuf_488[li_64] && g_ibuf_488[li_112] < g_ibuf_488[li_64] &&
                                                g_ibuf_488[li_116] < g_ibuf_488[li_64]) {
                                                ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
                                                ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_64]);
                                                ObjectSet(l_name_168, OBJPROP_TIME2, Time[li_64]);
                                                ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_64]);
                                                ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_64]);
                                                ObjectSet(l_name_168, OBJPROP_COLOR, DarkOliveGreen);
                                                ObjectSet(l_name_168, OBJPROP_WIDTH, 3 - MathMax(4, ai_0));
                                             } else ObjectDelete(l_name_168);
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
      if (TrendLine && g_ibuf_488[li_68] < g_ibuf_488[li_64] && Low[li_68] > Low[li_64]) {
         ObjectCreate(l_name_176, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_176, OBJPROP_TIME1, Time[li_68]);
         ObjectSet(l_name_176, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_176, OBJPROP_PRICE1, g_ibuf_492[li_68]);
         ObjectSet(l_name_176, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_176, OBJPROP_COLOR, Red);
         ObjectSet(l_name_176, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_176, OBJPROP_RAY, FALSE);
         ld_unused_340 = 1;
      } else {
         if (convergen == TRUE && TrendLine && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] < Low[li_64]) {
            ObjectCreate(l_name_176, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_176, OBJPROP_TIME1, Time[li_68]);
            ObjectSet(l_name_176, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_176, OBJPROP_PRICE1, g_ibuf_492[li_68]);
            ObjectSet(l_name_176, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_176, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_176, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_176, OBJPROP_RAY, FALSE);
            ld_unused_340 = 1;
         } else ObjectDelete(l_name_176);
      }
      if (TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] < g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
         Low[li_72] < Low[li_68]) {
         ObjectCreate(l_name_184, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_184, OBJPROP_TIME1, Time[li_72]);
         ObjectSet(l_name_184, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_184, OBJPROP_PRICE1, g_ibuf_492[li_72]);
         ObjectSet(l_name_184, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_184, OBJPROP_COLOR, Red);
         ObjectSet(l_name_184, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_184, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] < Low[li_64] &&
            Low[li_72] < Low[li_68] && g_ibuf_488[li_72] < g_ibuf_488[li_68]) {
            ObjectCreate(l_name_184, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_184, OBJPROP_TIME1, Time[li_72]);
            ObjectSet(l_name_184, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_184, OBJPROP_PRICE1, g_ibuf_492[li_72]);
            ObjectSet(l_name_184, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_184, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_184, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_184, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_184);
      }
      if (TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
         g_ibuf_488[li_76] < g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && Low[li_76] < Low[li_72] && Low[li_76] < Low[li_68]) {
         ObjectCreate(l_name_192, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_192, OBJPROP_TIME1, Time[li_76]);
         ObjectSet(l_name_192, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_192, OBJPROP_PRICE1, g_ibuf_492[li_76]);
         ObjectSet(l_name_192, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_192, OBJPROP_COLOR, Red);
         ObjectSet(l_name_192, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_192, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
            g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] < Low[li_64] && Low[li_76] < Low[li_72] && Low[li_76] < Low[li_68] && g_ibuf_488[li_76] < g_ibuf_488[li_72] && g_ibuf_488[li_76] < g_ibuf_488[li_68]) {
            ObjectCreate(l_name_192, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_192, OBJPROP_TIME1, Time[li_76]);
            ObjectSet(l_name_192, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_192, OBJPROP_PRICE1, g_ibuf_492[li_76]);
            ObjectSet(l_name_192, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_192, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_192, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_192, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_192);
      }
      if (TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
         g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] < g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && Low[li_80] < Low[li_76] && Low[li_80] < Low[li_72] &&
         Low[li_80] < Low[li_68]) {
         ObjectCreate(l_name_200, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_200, OBJPROP_TIME1, Time[li_80]);
         ObjectSet(l_name_200, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_200, OBJPROP_PRICE1, g_ibuf_492[li_80]);
         ObjectSet(l_name_200, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_200, OBJPROP_COLOR, Red);
         ObjectSet(l_name_200, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_200, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
            g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] < Low[li_64] && Low[li_80] < Low[li_76] && Low[li_80] < Low[li_72] &&
            Low[li_80] < Low[li_68] && g_ibuf_488[li_80] < g_ibuf_488[li_76] && g_ibuf_488[li_80] < g_ibuf_488[li_72] && g_ibuf_488[li_80] < g_ibuf_488[li_68]) {
            ObjectCreate(l_name_200, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_200, OBJPROP_TIME1, Time[li_80]);
            ObjectSet(l_name_200, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_200, OBJPROP_PRICE1, g_ibuf_492[li_80]);
            ObjectSet(l_name_200, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_200, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_200, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_200, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_200);
      }
      if (TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
         g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && g_ibuf_488[li_84] < g_ibuf_488[li_64] &&
         Low[li_84] > Low[li_64] && Low[li_84] < Low[li_80] && Low[li_84] < Low[li_76] && Low[li_84] < Low[li_72] && Low[li_84] < Low[li_68]) {
         ObjectCreate(l_name_208, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_208, OBJPROP_TIME1, Time[li_84]);
         ObjectSet(l_name_208, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_208, OBJPROP_PRICE1, g_ibuf_492[li_84]);
         ObjectSet(l_name_208, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_208, OBJPROP_COLOR, Red);
         ObjectSet(l_name_208, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_208, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
            g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && g_ibuf_488[li_84] > g_ibuf_488[li_64] &&
            Low[li_84] < Low[li_64] && Low[li_84] < Low[li_80] && Low[li_84] < Low[li_76] && Low[li_84] < Low[li_72] && Low[li_84] < Low[li_68] && g_ibuf_488[li_84] < g_ibuf_488[li_80] &&
            g_ibuf_488[li_84] < g_ibuf_488[li_76] && g_ibuf_488[li_84] < g_ibuf_488[li_72] && g_ibuf_488[li_84] < g_ibuf_488[li_68]) {
            ObjectCreate(l_name_208, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_208, OBJPROP_TIME1, Time[li_84]);
            ObjectSet(l_name_208, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_208, OBJPROP_PRICE1, g_ibuf_492[li_84]);
            ObjectSet(l_name_208, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_208, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_208, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_208, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_208);
      }
      if (TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
         g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && g_ibuf_488[li_84] > g_ibuf_488[li_64] &&
         Low[li_84] > Low[li_64] && g_ibuf_488[li_88] < g_ibuf_488[li_64] && Low[li_88] > Low[li_64] && Low[li_88] < Low[li_84] && Low[li_88] < Low[li_80] && Low[li_88] < Low[li_76] &&
         Low[li_88] < Low[li_72] && Low[li_88] < Low[li_68]) {
         ObjectCreate(l_name_216, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_216, OBJPROP_TIME1, Time[li_88]);
         ObjectSet(l_name_216, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_216, OBJPROP_PRICE1, g_ibuf_492[li_88]);
         ObjectSet(l_name_216, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_216, OBJPROP_COLOR, Red);
         ObjectSet(l_name_216, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_216, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
            g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && g_ibuf_488[li_84] > g_ibuf_488[li_64] &&
            Low[li_84] > Low[li_64] && g_ibuf_488[li_88] > g_ibuf_488[li_64] && Low[li_88] < Low[li_64] && Low[li_88] < Low[li_84] && Low[li_88] < Low[li_80] && Low[li_88] < Low[li_76] &&
            Low[li_88] < Low[li_72] && Low[li_88] < Low[li_68] && g_ibuf_488[li_88] < g_ibuf_488[li_84] && g_ibuf_488[li_88] < g_ibuf_488[li_80] && g_ibuf_488[li_88] < g_ibuf_488[li_76] &&
            g_ibuf_488[li_88] < g_ibuf_488[li_72] && g_ibuf_488[li_88] < g_ibuf_488[li_68]) {
            ObjectCreate(l_name_216, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_216, OBJPROP_TIME1, Time[li_88]);
            ObjectSet(l_name_216, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_216, OBJPROP_PRICE1, g_ibuf_492[li_88]);
            ObjectSet(l_name_216, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_216, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_216, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_216, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_216);
      }
      if (TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
         g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && g_ibuf_488[li_84] > g_ibuf_488[li_64] &&
         Low[li_84] > Low[li_64] && g_ibuf_488[li_88] > g_ibuf_488[li_64] && Low[li_88] > Low[li_64] && g_ibuf_488[li_92] < g_ibuf_488[li_64] && Low[li_92] > Low[li_64] && Low[li_92] < Low[li_88] &&
         Low[li_92] < Low[li_84] && Low[li_92] < Low[li_80] && Low[li_92] < Low[li_76] && Low[li_92] < Low[li_72] && Low[li_92] < Low[li_68]) {
         ObjectCreate(l_name_224, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_224, OBJPROP_TIME1, Time[li_92]);
         ObjectSet(l_name_224, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_224, OBJPROP_PRICE1, g_ibuf_492[li_92]);
         ObjectSet(l_name_224, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_224, OBJPROP_COLOR, Red);
         ObjectSet(l_name_224, OBJPROP_WIDTH, 2);
         ObjectSet(l_name_224, OBJPROP_RAY, FALSE);
      } else {
         if (convergen == TRUE && TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
            g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && g_ibuf_488[li_84] > g_ibuf_488[li_64] &&
            Low[li_84] > Low[li_64] && g_ibuf_488[li_88] > g_ibuf_488[li_64] && Low[li_88] > Low[li_64] && g_ibuf_488[li_92] > g_ibuf_488[li_64] && Low[li_92] < Low[li_64] && Low[li_92] < Low[li_88] &&
            Low[li_92] < Low[li_84] && Low[li_92] < Low[li_80] && Low[li_92] < Low[li_76] && Low[li_92] < Low[li_72] && Low[li_92] < Low[li_68] && g_ibuf_488[li_92] < g_ibuf_488[li_88] &&
            g_ibuf_488[li_92] < g_ibuf_488[li_84] && g_ibuf_488[li_92] < g_ibuf_488[li_80] && g_ibuf_488[li_92] < g_ibuf_488[li_76] && g_ibuf_488[li_92] < g_ibuf_488[li_72] &&
            g_ibuf_488[li_92] < g_ibuf_488[li_68]) {
            ObjectCreate(l_name_224, OBJ_TREND, l_window_372, 0, 0, 0, 0);
            ObjectSet(l_name_224, OBJPROP_TIME1, Time[li_92]);
            ObjectSet(l_name_224, OBJPROP_TIME2, Time[li_64]);
            ObjectSet(l_name_224, OBJPROP_PRICE1, g_ibuf_492[li_92]);
            ObjectSet(l_name_224, OBJPROP_PRICE2, g_ibuf_492[li_64]);
            ObjectSet(l_name_224, OBJPROP_COLOR, Gold);
            ObjectSet(l_name_224, OBJPROP_WIDTH, 2);
            ObjectSet(l_name_224, OBJPROP_RAY, FALSE);
         } else ObjectDelete(l_name_224);
      }
      if (TrendLine && TL == TRUE && g_ibuf_488[li_68] > g_ibuf_488[li_64] && Low[li_68] > Low[li_64] && g_ibuf_488[li_72] > g_ibuf_488[li_64] && Low[li_72] > Low[li_64] &&
         g_ibuf_488[li_76] > g_ibuf_488[li_64] && Low[li_76] > Low[li_64] && g_ibuf_488[li_80] > g_ibuf_488[li_64] && Low[li_80] > Low[li_64] && g_ibuf_488[li_84] > g_ibuf_488[li_64] &&
         Low[li_84] > Low[li_64] && g_ibuf_488[li_88] > g_ibuf_488[li_64] && Low[li_88] > Low[li_64] && g_ibuf_488[li_92] > g_ibuf_488[li_64] && Low[li_92] > Low[li_64] && g_ibuf_488[li_96] < g_ibuf_488[li_64] &&
         Low[li_96] > Low[li_64] && Low[li_96] < Low[li_92] && Low[li_96] < Low[li_88] && Low[li_96] < Low[li_84] && Low[li_96] < Low[li_80] && Low[li_96] < Low[li_76] && Low[li_96] < Low[li_72] &&
         Low[li_96] < Low[li_68]) {
         ObjectCreate(l_name_232, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_232, OBJPROP_TIME1, Time[li_96]);
         ObjectSet(l_name_232, OBJPROP_TIME2, Time[li_64]);
         ObjectSet(l_name_232, OBJPROP_PRICE1, g_ibuf_492[li_96]);
         ObjectSet(l_name_232, OBJPROP_PRICE2, g_ibuf_492[li_64]);
         ObjectSet(l_name_232, OBJPROP_COLOR, Red);
         ObjectSet(l_name_232, OBJPROP_WIDTH, 2);
      } else ObjectDelete(l_name_232);
      if (Trend_Up == FALSE) ObjectDelete(l_name_168);
      l_name_168 = "LCL(" + Complect + ")_" + ai_0;
      if (ChannelLine) {
         ObjectCreate(l_name_168, OBJ_TREND, l_window_372, 0, 0, 0, 0);
         ObjectSet(l_name_168, OBJPROP_TIME1, Time[li_124]);
         ObjectSet(l_name_168, OBJPROP_TIME2, Time[0]);
         ObjectSet(l_name_168, OBJPROP_PRICE1, g_ibuf_492[li_124]);
         ObjectSet(l_name_168, OBJPROP_PRICE2, g_ibuf_492[li_124] + ld_136 * li_124);
         ObjectSet(l_name_168, OBJPROP_COLOR, l_color_132);
      } else ObjectDelete(l_name_168);
      if (HandyColour) l_color_132 = ChannelL;
      else l_color_132 = gia_508[2 * ai_0 - 1];
      l_name_168 = "CHAl(" + Complect + ")_" + ai_0;
      if (Channel) {
         if (Regression) {
            ObjectCreate(l_name_168, OBJ_REGRESSION, l_window_372, Time[li_68], g_ibuf_492[li_68], Time[li_64], g_ibuf_492[li_64]);
            ObjectSet(l_name_168, OBJPROP_COLOR, l_color_132);
            ObjectSet(l_name_168, OBJPROP_RAY, RayL);
         } else {
            ObjectCreate(l_name_168, OBJ_STDDEVCHANNEL, l_window_372, Time[li_68], g_ibuf_492[li_68], Time[li_64], g_ibuf_492[li_64]);
            ObjectSet(l_name_168, OBJPROP_DEVIATION, STD_widthL);
            ObjectSet(l_name_168, OBJPROP_COLOR, l_color_132);
            ObjectSet(l_name_168, OBJPROP_RAY, RayL);
         }
      } else ObjectDelete(l_name_168);
   }
   return (ls_ret_152);
}

int GetTD(int ai_0, double ada_4[]) {
   int l_index_8 = 0;
   for (int l_count_12 = 0; l_count_12 < ai_0; l_count_12++) {
      l_index_8++;
      while (ada_4[l_index_8] == 0.0) {
         l_index_8++;
         if (l_index_8 > showBars - 2) return (-1);
      }
   }
   return (l_index_8);
}

int GetNextHighTD(int ai_0) {
   int li_ret_4 = ai_0 + 1;
   while (g_ibuf_496[li_ret_4] == 0.0) {
      li_ret_4++;
      if (li_ret_4 > showBars - 2) return (-1);
   }
   return (li_ret_4);
}

int GetNextLowTD(int ai_0) {
   int li_ret_4 = ai_0 + 1;
   while (g_ibuf_500[li_ret_4] == 0.0) {
      li_ret_4++;
      if (li_ret_4 > showBars - 2) return (-1);
   }
   return (li_ret_4);
}
